<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    该xml为[senpure-code-generator]于[2019-03-12 14:10:48]自动生成，如果预计字段经常变动，不
    建议修改。如果该xml不能满足需要可新建一个mxl，如ServerCenterAndWorkExpandMapper.xml，将
    命名空间指向com.senpure.snowflake.mapper.ModelAMapper即可，该xml中定义的serverCenterAndW
    orkResultMap与serverCenterAndWorkAllColumns等其他可以在新建的xml中直接引用。
-->
<mapper namespace="com.senpure.snowflake.mapper.ServerCenterAndWorkMapper">
    <resultMap id="serverCenterAndWorkResultMap" type="com.senpure.snowflake.model.ServerCenterAndWork">
        <id     column="id"           property="id"          jdbcType="INTEGER"/> <!-- (主键) -->
        <result column="version"      property="version"     jdbcType="INTEGER"/> <!-- 乐观锁，版本控制 -->
        <result column="server_name"  property="serverName"  jdbcType="VARCHAR"/>
        <result column="server_key"   property="serverKey"   jdbcType="VARCHAR"/>
        <result column="center_id"    property="centerId"    jdbcType="INTEGER"/>
        <result column="work_id"      property="workId"      jdbcType="INTEGER"/>
    </resultMap>
    <sql id="serverCenterAndWorkAllColumns">
        id,version,server_name,server_key,center_id,work_id
    </sql>

    <!--主键查找-->
    <select id="find" resultMap="serverCenterAndWorkResultMap" parameterType="Integer">
        select <include refid="serverCenterAndWorkAllColumns"/> from server_center_and_work where id = #{id}
    </select>

    <!--主键删除-->
    <delete id="delete" parameterType="Integer">
        delete from server_center_and_work where id = #{id}
    </delete>


    <!--按条件删除(不取主键的值进行对比，即主键无效化)-->
    <delete id="deleteByCriteria" parameterType="com.senpure.snowflake.criteria.ServerCenterAndWorkCriteria">
        delete from server_center_and_work
        <where>
            <if test="serverName != null">
                and server_name = #{serverName}
            </if>
            <if test="serverKey != null">
                and server_key = #{serverKey}
            </if>
            <if test="centerId != null">
                and center_id = #{centerId}
            </if>
            <if test="workId != null">
                and work_id = #{workId}
            </if>
        </where>
    </delete>

    <!-- 取对象的值，直接插入数据库(包括空值),version字段(版本控制)，被初始化为1-->
    <insert id="save" parameterType="com.senpure.snowflake.model.ServerCenterAndWork" useGeneratedKeys="true" keyProperty="id">
        insert into server_center_and_work (<include refid="serverCenterAndWorkAllColumns"/>)
        values (#{id},1,#{serverName},#{serverKey},#{centerId},#{workId})
    </insert>

    <!-- 取对象的值，直接插入数据库(包括空值),version字段(版本控制)，被初始化为1-->
    <insert id="saveBatch" parameterType="com.senpure.snowflake.model.ServerCenterAndWork" >
        insert into server_center_and_work (<include refid="serverCenterAndWorkAllColumns"/>)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},1,#{item.serverName},#{item.serverKey},#{item.centerId},#{item.workId})
        </foreach>
    </insert>

    <!--会进行对象的空值判断，不为空才更新，以主键进行where判断,version字段(版本控制)，必须有有效值-->
    <update id="update" parameterType="com.senpure.snowflake.model.ServerCenterAndWork">
        update server_center_and_work
        <set>
            <bind name="versionUpdate" value="version + 1"/>
            version = #{versionUpdate},
            <if test="serverName != null">
                server_name = #{serverName},
            </if>
            <if test="serverKey != null">
                server_key = #{serverKey},
            </if>
            <if test="centerId != null">
                center_id = #{centerId},
            </if>
            <if test="workId != null">
                work_id = #{workId},
            </if>
        </set>
        where id = #{id}  and version =  #{version}
    </update>

    <!-- 直接将值覆盖到数据库，不会做为空判断，以主键进行where判断,version字段(版本控制)，必须有有效值-->
    <update id="cover" parameterType="com.senpure.snowflake.model.ServerCenterAndWork">
        update server_center_and_work
        <set>
            <bind name="versionUpdate" value="version + 1"/>
            version = #{versionUpdate},
            server_name = #{serverName},
            server_key = #{serverKey},
            center_id = #{centerId},
            work_id = #{workId},
        </set>
        where id = #{id}  and version =  #{version}
    </update>

    <!--会进行对象的空值判断，不为空才更新，主键无值时，可以进行批量更新-->
    <update id="updateByCriteria" parameterType="com.senpure.snowflake.criteria.ServerCenterAndWorkCriteria">
        update server_center_and_work
        <set>
            <choose>
                <when test="version != null">
                    <bind name="versionUpdate" value="version + 1"/>
                    version = #{versionUpdate},
                </when>
                <otherwise>
                    version = version + 1,
                </otherwise>
            </choose>
                <if test="serverName != null">
                    server_name = #{serverName},
                </if>
                <if test="serverKey != null">
                    server_key = #{serverKey},
                </if>
                <if test="centerId != null">
                    center_id = #{centerId},
                </if>
                <if test="workId != null">
                    work_id = #{workId},
                </if>
        </set>
        <where>
                <if test="id != null">
                    id = #{id}
                 </if>
                <if test="version != null">
                    and version =  #{version}
                </if>
        </where>
     </update>

    <select id="count" resultType="int">
        select count(*) from server_center_and_work
    </select>

    <select id="findAll" resultMap="serverCenterAndWorkResultMap" parameterType="Integer">
        select <include refid="serverCenterAndWorkAllColumns"/> from server_center_and_work
    </select>

    <!--主键会无效化,不会进行条件对比-->
    <select id="countByCriteria" resultType="int" parameterType="com.senpure.snowflake.criteria.ServerCenterAndWorkCriteria">
        select count(*) from server_center_and_work
        <where>
            <if test="serverName != null">
                and server_name = #{serverName}
            </if>
            <if test="serverKey != null">
                and server_key = #{serverKey}
            </if>
            <if test="centerId != null">
                and center_id = #{centerId}
            </if>
            <if test="workId != null">
                and work_id = #{workId}
            </if>
        </where>
    </select>

    <!--主键会无效化,不会进行条件对比-->
    <select id="findByCriteria" parameterType="com.senpure.snowflake.criteria.ServerCenterAndWorkCriteria" resultMap="serverCenterAndWorkResultMap">
        select <include refid="serverCenterAndWorkAllColumns"/>
        from server_center_and_work
        <where>
            <if test="serverName != null">
                and server_name = #{serverName}
            </if>
            <if test="serverKey != null">
                and server_key = #{serverKey}
            </if>
            <if test="centerId != null">
                and center_id = #{centerId}
            </if>
            <if test="workId != null">
                and work_id = #{workId}
            </if>
        </where>
        <if test="hasOrder">
            ORDER BY
            <foreach collection="criteriaOrder" index="key" item="item" separator=",">
                <if test="item == 'DESC'">
                    ${key} DESC
                </if>
                <if test="item == 'ASC'">
                    ${key} ASC
                </if>
            </foreach>
        </if>
        <if test="usePage">
            <choose>
                <when test="firstResult == 0">
                    limit #{maxResults}
                </when>
                <otherwise>
                    limit #{firstResult}, #{maxResults}
                </otherwise>
            </choose>
        </if>
    </select>
</mapper>
